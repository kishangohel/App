import 'package:google_maps_webservice/places.dart';
import 'package:latlong2/latlong.dart';
import 'package:verifi/models/wifi_details.dart';

/// A single WiFi access point or a cluster of WiFi access points.
/// [id] is either the unique ID auto-generated by Firestore, or a
class AccessPoint {
  final String id;
  WifiDetails wifiDetails;
  PlaceDetails? placeDetails;
  List<AccessPoint>? points;

  AccessPoint({
    required this.id,
    required this.wifiDetails,
    this.placeDetails,
    this.points,
  });

  LatLng? get location => wifiDetails.location;

  factory AccessPoint.fromJson(Map<String, dynamic> json) {
    return AccessPoint(
      id: json['id'],
      placeDetails: PlaceDetails.fromJson(json['placeDetails']),
      wifiDetails: WifiDetails.fromJson(json['wifiDetails']),
    );
  }

  Map<String, dynamic> toJson() => {
        'id': id,
        'placeDetails': _placeDetailsToJson(),
        'wifiDetails': wifiDetails.toJson(),
      };

  @override
  String toString() => "AccessPoint: { id: $id, location: $location }";

  Map<String, dynamic> _placeDetailsToJson() {
    return {
      'icon': placeDetails?.icon,
      'geometry': {
        'location': {
          'lat': placeDetails?.geometry?.location.lat,
          'lng': placeDetails?.geometry?.location.lng,
        },
      },
      'name': placeDetails?.name,
      'photos': (placeDetails?.photos != null)
          ? placeDetails?.photos
              .map((photo) => {
                    'photo_reference': photo.photoReference,
                    'height': photo.height,
                    'width': photo.width,
                    'html_attributions': photo.htmlAttributions,
                  })
              .toList()
          : null,
      'place_id': placeDetails?.placeId,
      'formatted_address': placeDetails?.formattedAddress,
    };
  }
}
