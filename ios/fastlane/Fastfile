default_platform(:ios)

platform :ios do

  lane :setupStaging do
    if is_ci 
      setup_ci
    end 

    update_code_signing_settings(
      use_automatic_signing: false,
      path: "Runner.xcodeproj",
    )

    # match is an alias for `sync_code_signing`
    match(
      type: "adhoc",
      app_identifier: "world.verifi.app.stg",
      git_basic_authorization: ENV["GIT_AUTHORIZATION_B64"],
      readonly: is_ci,
    )

    #
    # api_key = app_store_connect_api_key(
    #   is_key_content_base64: true,
    #   in_house: false,
    # )
  end

  desc "Increment iOS build number"
  lane :incrementIOSBuildNumber do
    latest_release = firebase_app_distribution_get_latest_release(
      app: ENV["FIREBASE_IOS_APP_ID_STG"],
      firebase_cli_token: ENV["FIREBASE_TOKEN"],
    )
    increment_build_number({ build_number: latest_release[:buildVersion].to_i + 1 })
  end

  lane :distributeIOSStaging do
    firebase_app_distribution(
      app: ENV["FIREBASE_IOS_APP_ID_STG"],
      firebase_cli_token: ENV["FIREBASE_TOKEN"],
      groups: "testers",
      ipa_path: "../build/ios/ipa/VeriFi.ipa",
    )
  end

  # This should only be called locally (not in CI)
  lane :generateNewCertificates do
    # NOTE: match is an alias for the sync_code_signing action
    match(
      type: "development",
      app_identifier: "world.verifi.app.dev",
      force_for_new_devices: true,
      readonly: false,
    )
    match(
      type: "adhoc",
      app_identifier: "world.verifi.app.stg",
      force_for_new_devices: true,
      readonly: false,
    )
    match(
      type: "appstore",
      app_identifier: "world.verifi.app",
      force_for_new_devices: true,
      readonly: false,
    )
  end

  lane :setBuildNumber do 
    increment_build_number(
      # Change this manually
      build_number: ENV["BUILD_NUMBER"],
    ) 
  end
end
